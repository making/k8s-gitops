#@ load("@ytt:data", "data")
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: counter-api
  labels:
    app: counter-api
    app.kubernetes.io/part-of: counter-api
spec:
  template:
    metadata:
      annotations:
        github.com/revision: #@ data.values.git_revision
        autoscaling.knative.dev/maxScale: "1"
        autoscaling.knative.dev/minScale: "0"
        autoscaling.knative.dev/scale-down-delay: "0"
    spec:
      containers:
      - image: #@ data.values.image
        imagePullPolicy: IfNotPresent
        env:
        - name: server.port
          value: "8080"
        - name: info.env.hostname
          value: ${HOSTNAME:}
        - name: spring.sql.init.mode
          value: never
        - name: spring.datasource.url
          valueFrom:
            secretKeyRef:
              key: jdbc-url
              name: counter-config
        - name: spring.datasource.username
          valueFrom:
            secretKeyRef:
              key: jdbc-username
              name: counter-config
        - name: spring.datasource.password
          valueFrom:
            secretKeyRef:
              key: jdbc-password
              name: counter-config
        - name: management.otlp.logging.endpoint
          valueFrom:
            secretKeyRef:
              key: otlp-logs-endpoint
              name: counter-config
        - name: management.otlp.logging.headers.authorization
          valueFrom:
            secretKeyRef:
              key: otlp-logs-header-authorization
              name: counter-config
        - name: management.otlp.tracing.endpoint
          valueFrom:
            secretKeyRef:
              key: otlp-traces-endpoint
              name: counter-config
        - name: management.otlp.tracing.headers.authorization
          valueFrom:
            secretKeyRef:
              key: otlp-traces-header-authorization
              name: counter-config
        - name: management.otlp.metrics.export.url
          valueFrom:
            secretKeyRef:
              key: otlp-metrics-endpoint
              name: counter-config
        - name: management.otlp.metrics.export.headers.authorization
          valueFrom:
            secretKeyRef:
              key: otlp-metrics-header-authorization
              name: counter-config
        - name: management.otlp.metrics.export.step
          value: 10s
        - name: management.otlp.metrics.export.base-time-unit
          value: seconds
        - name: management.metrics.tags.app
          value: counter-api
        - name: management.metrics.tags.cluster
          value: zje2gl28i8h
        #! HOSTNAME = pod name is a high cardinality tag under the serverless environment, so use K_REVISION instead.
        - name: management.metrics.tags.instance
          value: ${K_REVISION:}
        - name: management.opentelemetry.resource-attributes.k8s.pod.name
          value: ${HOSTNAME:}
        - name: management.opentelemetry.resource-attributes.k8s.namespace.name
          value: zje2gl28i8h
        - name: management.opentelemetry.resource-attributes.k8s.cluster.name
          value: zje2gl28i8h
        - name: logging.structured.format.console
          value: ecs
        - name: spring.threads.virtual.enabled
          value: "true"
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 125m
            ephemeral-storage: 400M
            memory: 250M
          requests:
            cpu: 125m
            ephemeral-storage: 400M
            memory: 250M
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1002
          seccompProfile:
            type: RuntimeDefault
