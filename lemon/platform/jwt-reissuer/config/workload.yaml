#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
apiVersion: v1
kind: Service
metadata:
  name: jwt-reissuer
  namespace: kube-system
  annotations:
    kapp.k14s.io/change-group: workload
  labels:
    app: jwt-reissuer
    app.kubernetes.io/part-of: jwt-reissuer
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: jwt-reissuer
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jwt-reissuer
  namespace: kube-system
  annotations:
    kapp.k14s.io/change-group: workload
  labels:
    app: jwt-reissuer
    app.kubernetes.io/part-of: jwt-reissuer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jwt-reissuer
  template:
    metadata:
      annotations:
        github.com/revision: #@ data.values.git_revision
      labels:
        app: jwt-reissuer
        app.kubernetes.io/part-of: jwt-reissuer
    spec:
      serviceAccountName: jwt-reissuer
      containers:
      - env:
        - name: reissuer.jwt.public-key
          value: file:/etc/keys/pub.pem
        - name: reissuer.jwt.private-key
          value: file:/etc/keys/key.pem
        - name: reissuer.oidc.api-server-url
          value: https://kubernetes.default.svc.cluster.local
        - name: reissuer.oidc.bearer-token
          value: file:/var/run/secrets/kubernetes.io/serviceaccount/token
        - name: reissuer.oidc.client-bundle-name
          value: k8s
        - name: spring.ssl.bundle.pem.k8s.truststore.certificate
          value: file:/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - name: server.port
          value: "8080"
        - name: info.env.hostname
          value: ${HOSTNAME:}
        - name: logging.structured.format.console
          value: ecs
        - name: spring.threads.virtual.enabled
          value: "true"
        image: #@ data.values.image
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        startupProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
          failureThreshold: 20
          periodSeconds: 5
        name: workload
        ports:
        - containerPort: 8080
          name: user-port
          protocol: TCP
        resources:
          limits:
            memory: 128Mi
          requests:
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1002
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: key-volume
          mountPath: /etc/keys
          readOnly: true
      volumes:
      - name: key-volume
        secret:
          secretName: rsa-key1
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: jwt-reissuer
              topologyKey: kubernetes.io/hostname
            weight: 1