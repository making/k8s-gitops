#@ load("@ytt:data", "data")
apiVersion: v1
kind: Service
metadata:
  name: translation-api
  namespace: blog
  annotations:
    kapp.k14s.io/change-group: workload
  labels:
    app: translation-api
    app.kubernetes.io/part-of: translation-api
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: translation-api
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: translation-api
  namespace: blog
  annotations:
    kapp.k14s.io/change-group: workload
  labels:
    app: translation-api
    app.kubernetes.io/part-of: translation-api
spec:
  replicas: #@ data.values.replicas
  selector:
    matchLabels:
      app: translation-api
  template:
    metadata:
      annotations:
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
        github.com/revision: #@ data.values.git_revision
      labels:
        app: translation-api
        app.kubernetes.io/part-of: translation-api
    spec:
      containers:
      - env:
        - name: server.port
          value: "8080"
        - name: JAVA_TOOL_OPTIONS
          value: -XX:ActiveProcessorCount=2 -Dfile.encoding="UTF-8" -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.health.probes.enabled="true" -Dserver.port="8080" -Duser.country="JP" -Duser.language="ja" -Duser.timezone="Asia/Tokyo"
        - name: BPL_JVM_THREAD_COUNT
          value: "28"
        - name: info.env.hostname
          value: ${HOSTNAME:}
        - name: entry.api-url
          value: http://blog-api.blog.svc.cluster.local
        - name: spring.ai.openai.api-key
          valueFrom:
            secretKeyRef:
              key: openai-api-key
              name: translation-config
        - name: github.access-token
          valueFrom:
            secretKeyRef:
              key: github-access-token
              name: translation-config
        - name: github.webhook-secret
          valueFrom:
            secretKeyRef:
              key: github-webhook-secret
              name: translation-config
        - name: management.otlp.logging.endpoint
          value: http://otel-collector.opentelemetry.svc.cluster.local:4318/v1/logs
        - name: management.otlp.tracing.endpoint
          value: http://otel-collector.opentelemetry.svc.cluster.local:4318/v1/traces
        - name: management.opentelemetry.resource-attributes.k8s.pod.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: management.opentelemetry.resource-attributes.k8s.namespace.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: management.opentelemetry.resource-attributes.k8s.node.name
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: management.opentelemetry.resource-attributes.host.ip
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: logging.structured.format.console
          value: ecs
        - name: spring.threads.virtual.enabled
          value: "true"
        image: #@ data.values.image
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        startupProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
          failureThreshold: 20
          periodSeconds: 5
        name: workload
        ports:
        - containerPort: 8080
          name: user-port
          protocol: TCP
        resources:
          limits:
            memory: 416Mi
          requests:
            memory: 416Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1002
          seccompProfile:
            type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: translation-api
              topologyKey: kubernetes.io/hostname
            weight: 1
---
apiVersion: v1
kind: Secret
metadata:
  name: translation-config
  namespace: blog
type: Opaque
stringData:
  type: "translation-api"
  openai-api-key: #@ data.values.openai_api_key
  github-access-token: #@ data.values.github_access_token
  github-webhook-secret: #@ data.values.github_webhook_secret