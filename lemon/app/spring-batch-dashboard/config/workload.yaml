#@ load("@ytt:data", "data")
apiVersion: v1
kind: Service
metadata:
  name: spring-batch-dashboard
  namespace: spring-batch
  annotations:
    kapp.k14s.io/change-group: workload
  labels:
    app: spring-batch-dashboard
    app.kubernetes.io/part-of: spring-batch-dashboard
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: spring-batch-dashboard
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-batch-dashboard
  namespace: spring-batch
  annotations:
    kapp.k14s.io/change-group: workload
  labels:
    app: spring-batch-dashboard
    app.kubernetes.io/part-of: spring-batch-dashboard
spec:
  replicas: #@ data.values.replicas
  selector:
    matchLabels:
      app: spring-batch-dashboard
  template:
    metadata:
      annotations:
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
        github.com/revision: #@ data.values.git_revision
      labels:
        app: spring-batch-dashboard
        app.kubernetes.io/part-of: spring-batch-dashboard
    spec:
      containers:
      - env:
        - name: spring.datasource.url
          value: #@ data.values.spring_datasource_url
        - name: spring.datasource.username
          value: #@ data.values.spring_datasource_username
        - name: spring.datasource.password
          value: #@ data.values.spring_datasource_password
        - name: spring.security.user.name
          value: #@ data.values.spring_security_user_name
        - name: spring.security.user.password
          value: #@ data.values.spring_security_user_password
        - name: logging.structured.format.console
          value: ecs
        - name: spring.datasource.hikari.maximum-pool-size
          value: "3"
        - name: management.opentelemetry.resource-attributes.k8s.pod.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: management.opentelemetry.resource-attributes.k8s.namespace.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: management.opentelemetry.resource-attributes.k8s.node.name
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: management.opentelemetry.resource-attributes.host.ip
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: #@ data.values.image
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /actuator/health/liveness
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
            scheme: HTTP
        startupProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
            scheme: HTTP
          failureThreshold: 20
          periodSeconds: 5
        name: workload
        ports:
        - containerPort: 8080
          name: user-port
          protocol: TCP
        resources:
          limits:
            memory: 250Mi
          requests:
            memory: 250Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1002
          seccompProfile:
            type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: spring-batch-dashboard
              topologyKey: kubernetes.io/hostname
            weight: 1